  !
  SUBROUTINE qes_init_{{ type|type_name }}({{ type|init_argument_line }})
    !
    IMPLICIT NONE
    !
    TYPE({{ type|type_name('_type') }}), INTENT(OUT) :: obj
    CHARACTER(LEN=*), INTENT(IN) :: tagname
{%- for attribute in type.attributes.values() %}
  {%- if attribute.is_required() %}
    {{ attribute.type|init_fortran_type }}, INTENT(IN) :: {{ attribute|name }}
  {%- else %}
    {{ attribute.type|init_fortran_type }}, OPTIONAL, INTENT(IN) :: {{ attribute|name }}
  {%- endif %}
{%- endfor %}
{%- if type.is_extension() %}
    {{ type.base_type|init_fortran_type }}, INTENT(IN) :: {{ type|type_name }}
{%- endif %}
{%- if type.has_complex_content() %}
{%- for element in type.content_type.iter_elements() %}
  {%- if (element|is_qes_type) %}
    {%- if element.type.is_simple() %}
    {{ element.type|init_fortran_type }},{{ element|optional }}{{ element|dimension }}INTENT(IN) :: {{ element|name }}
    {%- else %}
    TYPE({{ element|type_name('_type') }}),{{ element|optional }}{{ element|dimension }}INTENT(IN) :: {{ element|name }}
    {%- endif %}
  {%- else %}
    {{ element.type|init_fortran_type }},{{ element|optional }}{{ element|dimension }}INTENT(IN) :: {{ element|name }}
  {%- endif %}
{%- endfor %}
{%- endif %}
    !
    obj%tagname = TRIM(tagname)
    obj%lwrite = .TRUE.
    obj%lread = .TRUE.
{%- for attribute in type.attributes.values() %}
  {%- if attribute.is_required() %}
    obj%{{ attribute|name }} = {{ attribute|name }}
  {%- else %}
    IF (PRESENT({{ attribute|name }})) THEN
      obj%{{ attribute|name }}_ispresent = .TRUE.
      obj%{{ attribute|name }} = {{ attribute|name }}
    ELSE
      obj%{{ attribute|name }}_ispresent = .FALSE.
    END IF
  {%- endif %}
{%- endfor %}
    !
{%- if type.has_complex_content() %}
{%- for element in type.content_type.iter_elements() %}
  {%- if element.min_occurs == 0 %}
    IF ( PRESENT({{ element|name }})) THEN
      obj%{{ element|name }}_ispresent = .TRUE.
    {%- if element.is_multiple() %}
      ALLOCATE(obj%{{ element|name }}(SIZE({{ element|name }})))
      obj%ndim_{{ element|name }} = SIZE({{ element|name }})
    {%- endif %} 
      obj%{{ element|name }} = {{ element|name }}
    ELSE
      obj%{{ element|name }}_ispresent = .FALSE.
    END IF 
  {%- else %}
    {%- if element.is_multiple() %}
    ALLOCATE(obj%{{ element|name }}(SIZE({{ element|name }})))
    obj%ndim_{{ element|name }} = SIZE({{ element|name }})
    {%- endif %}
    obj%{{ element|name }} = {{ element|name }}
  {%- endif %}
{%- endfor %}
{%- elif type.has_simple_content() %}
    obj%{{ type|type_name }} = {{ type|type_name }}
{%- endif %}
    !
  END SUBROUTINE qes_init_{{ type|type_name }}
  !