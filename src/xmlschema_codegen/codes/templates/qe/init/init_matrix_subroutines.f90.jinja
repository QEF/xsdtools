{%- for function in ( type|init_function_name ).split() %}
  !
  SUBROUTINE {{function}}(obj, tagname, dims, mat, order)
    !
    IMPLICIT NONE
    !
    TYPE({{ type|type_name }}), INTENT(OUT) :: obj
    CHARACTER(LEN=*), INTENT(IN) :: tagname
    INTEGER,DIMENSION(:),INTENT(IN) :: dims
{%- if '_1' in function %}
    {{type.base_type.local_name.replace('ALLOCATABLE','').replace('DIMENSION(:), ','')}}INTENT(IN) :: mat(:)
{%-elif '_2' in function %}
    {{type.base_type.local_name.replace('ALLOCATABLE','').replace('DIMENSION(:), ','')}}INTENT(IN) :: mat(:,:)
{%-elif '_3' in function %}
    {{type.base_type.local_name.replace('ALLOCATABLE','').replace('DIMENSION(:), ','')}}INTENT(IN) :: mat(:,:,:)
{%- endif %}
    CHARACTER(LEN=*),OPTIONAL :: order
    INTEGER :: rank, length, i
    !
    obj%tagname = TRIM(tagname)
    obj%lwrite = .TRUE.
    obj%lread = .TRUE.
    length = 1
    rank = SIZE(dims)
    DO i = 1, rank
      length = length * dims(i)
    END DO
    obj%rank = rank
    ALLOCATE(obj%{{ type.local_name.replace('Type','')}}(length), obj%dims(rank) )
{%- if '_1' in function %}
    obj%{{type.local_name.replace('Type','')}}(1:length) = mat(1:length)
{%- else %}
    obj%{{type.name.replace('Type','')}}(1:length) = reshape(mat, [length])
{%- endif %}
    obj%dims = dims
    IF (PRESENT(order)) THEN
      obj%order = TRIM(order)
    ELSE
      obj%order = 'F'
    END IF
    !
  END SUBROUTINE {{function}}
  !
{%- endfor %}