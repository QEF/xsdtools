  !
  SUBROUTINE qes_init_{{ type|type_name }}({{ type|init_argument_line|replace('size, ','') }})
    !
    IMPLICIT NONE
    !
    TYPE({{ type|type_name('_type') }}), INTENT(OUT) :: obj
    CHARACTER(LEN=*), INTENT(IN) :: tagname
    {{ type|init_fortran_type }}, INTENT(IN) :: {{ type|type_name }}
{%- for attribute in type.attributes.values() %}
  {%- if attribute.local_name != 'size' %}
    {%- if attribute.is_required() %}
    {{ attribute|init_fortran_type }}, INTENT(IN) :: {{ attribute|name }}
    {%- else %}
    {{ attribute|init_fortran_type }}, OPTIONAL, INTENT(IN) :: {{ attribute|name }}
    {%- endif %}
  {%- endif %}
{%- endfor %}
    !
    obj%tagname = TRIM(tagname)
    obj%lwrite = .TRUE.
    obj%lread = .TRUE.
    !
{%- for attribute in type.attributes.values() %}
  {%- if attribute.local_name != 'size' %}
    {%- if attribute.is_required() %}
    obj%{{ attribute|name }} = {{ attribute|name }}
    {%- else %}
    IF (PRESENT({{ attribute.name }})) THEN
      obj%{{ attribute|name }}_ispresent = .TRUE.
      obj%{{ attribute|name }} = {{ attribute|name }}
    ELSE 
      obj%{{ attribute|name }}_ispresent = .FALSE.
    END IF
    {%- endif %}
  {%- endif %}
{%- endfor %}
    obj%size = size({{ type|type_name }})
    ALLOCATE(obj%{{ type|type_name }}(obj%size))
    obj%{{ type|type_name }} = {{ type|type_name }}
    !
  END SUBROUTINE qes_init_{{ type|type_name }}
  !